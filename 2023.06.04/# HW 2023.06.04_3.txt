ИНТЕГРИРОВАННЫЕ СРЕДЫ РАЗРАБОТКИ

  ==========  1  ==========

Скачать и установить приложение PyCharm Community Edition.
    
    https://www.jetbrains.com/pycharm/download/
    
    Данное приложение доступно для всех распространённых ОС.
    Тем не менее процесс установки для различных *nix систем (включая OS X) может отличаться. Изучите способы установки из различных пакетов/репозиториев для вашей ОС:
        https://www.jetbrains.com/help/pycharm/installation-guide.html#standalone
        https://www.jetbrains.com/help/pycharm/installation-guide.html#snap
    
    Не используйте Toolbox App, особенно на малопроизводительных системах.

В настройках PyCharm (Ctrl+Alt+S) подключить свой аккаунт GitHub с помощью входа по персональному токену доступа (personal access token — PAT).
    
    (окно) Settings -> Version Control -> GitHub -> + -> Log In with Token... -> Generate...
    
    Для личной учётной записи GitHub без крупных проектов можно генерировать PAT без ограничения времени жизни. В случае необходимости любой PAT всегда можно вручную удалить в настройках учётной записи GitHub.

Создать заготовку для первого промежуточного проекта.
    
    В GitHub организации учебной группы создайте удалённый репозиторий для проекта.
        https://github.com/TOP-Python321
        Вы не сможете это сделать если ранее не приняли приглашение в саму организацию. Обратитесь к преподавателю, чтобы он отправил вам новое приглашение.
        
        Имя репозитория проекта формируется следующим образом: 
            <имя_репозитория_с_ДЗ>_project1
        где вместо <имя_репозитория_с_ДЗ> подставляется имя вашего удалённого репозитория с домашними заданиями. Скопируйте это имя, чтобы не ошибиться при наборе.
        
        Репозиторий должен быть публичным.
        
        Никакие дополнительные файлы не добавляются.
    
    В PyCharm создайте новый проект.
        
        Создайте новое виртуальное окружение — используйте Virtualenv
            Виртуальное окружение должно быть доступным только для текущего проекта и не должно наследовать внешние пакеты от глобального окружения интерпретатора.
        
        Не добавляйте файл main.py
    
Подключить проект к удалённому репозиторию.
    
    Создайте локальный репозиторий в каталоге проекта.
        (меню) VCS -> Enable Version Control Integration... -> Git
    
    Подключите текущий локальный репозиторий к ранее созданному удалённому.
        (меню) Git -> Manage Remotes... -> + -> URL
        
        В поле URL необходимо скопировать HTTPS ссылку на удалённый репозиторий. Эта ссылка доступна на странице удалённого репозитория в GitHub: в случае пустого репозитория искомая ссылка находится в блоке Quick Setup, в случае не пустого репозитория искомая ссылка находится в выпадающем блоке <> Code.
        Обратите внимание, что ссылка должна заканчиваться на .git, например:
            https://github.com/TOP-Python321/test.git

Выполнить первый коммит средствами PyCharm.
    
    Скопируйте в каталог проекта файл .gitignore из локального репозитория с домашними заданиями.
    
    Откройте панель Commit:
        (меню) View -> Tool Windows -> Commit
    
    Добавьте (поставьте галочку) файл .gitignore к ближайшему коммиту, напишите сообщение "исключения из версификации" и выполните коммит
    
    Отправьте коммит в удалённый репозиторий:
        (меню) Git -> Push...
    
    Откройте панель Git:
        (меню) View -> Tool Windows -> Git

Сделайте снимок экрана с запущенным PyCharm, на котором должна быть видна панель Git.
Имя файла снимка экрана 3.1.<png|jpg|...>


  =========================

В сервис Журнал отправляется сообщение о выполнении всех частей задания со ссылкой на репозиторий с домашними заданиями.